
***************** Output from TTTRUNNR *****************

 STTR043I Initializing simulation environment for: COBOL V4
 STTR043I Initializing simulation environment for: COBOL V5
 STTR011I totaltest zTargetRunner v170200 on 2019-01-10 08:08.10��������������������������������������
 STTR012I Options set to EXIT(),STUBS(ON),REPEAT(0),ARGTYPE(��������)
 STTR013I Processing test suite CWKTVSKS
 STTR014I Processing test scenario CWKTVSKS
 STTR028I Processing test case CWKTVSKS
 STTR006I Executing target CWKTVSKS
 STTR008I All targets successfully executed

***************** Output from TTOUT *****************

 ---BNDTARGT---entry
 --->>>modName = CWKTVSKS, epName = CWKTVSKS
 ---openW_includeName---entry
 --->>>moduleName = CWKTVSKS
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 3, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWKTVSKS, csectName = CWKTVSKS
 ---openW_includeName---entry
 --->>>moduleName = CWKTVSKS
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2019010, Length = 40
   data = c3e7c3e6d2e3e5e2d2e209394bdb7a1804005be019deaf0c5dec030b190000000000000000000000
   program = CWKTVSKS, ddio(27) = SALESSUP.YXN1.DEV1.LOAD.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---TARGET---entry
 module: CWKTVSKS, csect: CWKTVSKS, entry:
 ---TARGETcxx---entry
 ---TARGETcxx---exit
 ---TARGET---exit newTARGET: 38779028
 ---TARGCALL---entry newTARGET: 38779028
 ---T addTargetCall---entry
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---CC targetCall---entry
 CC AV ptr: 0
 CC AVb ptr: 0
 ---CC targetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---addTargetCall---entry
 AV ptr: 0
 AVb ptr: 0
 ---addTargetCall---exit
 ---T addTargetCall---exit
 ---~targetCall---entry
 ---~targetCall---exit
 ---TARGCALL---exit
 ---TARGARG---entry
 length: 14
 ---T addTargetArg---entry
 ---setData---entry
 cL: 14
 ---setData---exit
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0
 ---addTargetArg---entry
 AV ptr: 0
 AV #: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0
 ---CC TTArgVal---entry
 CC TTArgVal exit--- avP ptr: 0
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 gDA
 AV ptr: 387790A0
 ---addTargetArg---workingArea: 38779088
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---T addTargetArg---workingArea: 38779088
 ---~TTArgVal---entry
 ---~TTArgVal---exit
 ---TARGARG--- workingArea: 38779088
 ---BNDHOOK---entry
 --->>>modName = CWKTVSKS, pgmName = CWKTVSKS, vName = CWKTDATE , offset = 00000000
 ---openW_includeName---entry
 --->>>moduleName = CWKTVSKS
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getD: rc, count = 85, rs = <0X83000800>.
 --->>>class_offset: 000024B0
 --->>>element_offset: 000024B0
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDHOOK---exit
 ---SUBPGM---entry
 name: CWKTDATE, N
 token: 00000000, 0;
 ---SUBPGMcxx---entry
 token: 00000000, 0
 assertYN: N
 ---SUBPGMcxx---exit
 ---SUBPGM---exit  newSubPgm: 388A4028
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsIn
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 0
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 1
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 2
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBIN---entry
 ---addInArg---entry
 ---addAvIn---entry
 AVIn #: 3
 ---addAvIn---exit
 ---addInArg---exit
 ---SUBIN---exit
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: -1
 ---nextSubCallTemp---exit: 0
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 0
 ---nextSubCallTemp---exit: 1
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 1
 ---nextSubCallTemp---exit: 2
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 2
 ---nextSubCallTemp---exit: 3
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 3
 ---nextSubCallTemp---exit: 4
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 4
 ---nextSubCallTemp---exit: 5
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 5
 ---nextSubCallTemp---exit: 6
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 6
 ---nextSubCallTemp---exit: 7
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 7
 ---nextSubCallTemp---exit: 8
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 8
 ---nextSubCallTemp---exit: 9
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 9
 ---nextSubCallTemp---exit: 10
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'3861D290'
 ---doCall---entry
 parmlist: X'3861D290'
 ---nextSubCallTemp---entry
 stubbedCalls: 12, callTemp: 10
 ---nextSubCallTemp---exit: 11
 ---storeAVsInLive---entry
 Live size: 4, AVsIn size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
